{
  "type": "File",
  "start": 0,
  "end": 4864,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 159,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 4864,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 159,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 37,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 37
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 9,
            "end": 19,
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 19
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 9,
              "end": 19,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 19
                },
                "identifierName": "isFunction"
              },
              "name": "isFunction"
            },
            "local": {
              "type": "Identifier",
              "start": 9,
              "end": 19,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 19
                },
                "identifierName": "isFunction"
              },
              "name": "isFunction"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 27,
          "end": 36,
          "loc": {
            "start": {
              "line": 1,
              "column": 27
            },
            "end": {
              "line": 1,
              "column": 36
            }
          },
          "extra": {
            "rawValue": "../Type",
            "raw": "'../Type'"
          },
          "value": "../Type"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc The identity combinator is a function that returns the\n * same value it was provided as an argument.\n * I - combinator implementation.\n * @example\n * identity(2); // 2\n *\n * @param {T} value Argument that should returned back.\n * @return {T} Returns same value which was passed.\n ",
            "start": 39,
            "end": 334,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 12,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 335,
        "end": 386,
        "loc": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 342,
          "end": 386,
          "loc": {
            "start": {
              "line": 13,
              "column": 7
            },
            "end": {
              "line": 15,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 351,
            "end": 359,
            "loc": {
              "start": {
                "line": 13,
                "column": 16
              },
              "end": {
                "line": 13,
                "column": 24
              },
              "identifierName": "identity"
            },
            "name": "identity",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 360,
              "end": 365,
              "loc": {
                "start": {
                  "line": 13,
                  "column": 25
                },
                "end": {
                  "line": 13,
                  "column": 30
                },
                "identifierName": "value"
              },
              "name": "value"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 367,
            "end": 386,
            "loc": {
              "start": {
                "line": 13,
                "column": 32
              },
              "end": {
                "line": 15,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 371,
                "end": 384,
                "loc": {
                  "start": {
                    "line": 14,
                    "column": 2
                  },
                  "end": {
                    "line": 14,
                    "column": 15
                  }
                },
                "argument": {
                  "type": "Identifier",
                  "start": 378,
                  "end": 383,
                  "loc": {
                    "start": {
                      "line": 14,
                      "column": 9
                    },
                    "end": {
                      "line": 14,
                      "column": 14
                    },
                    "identifierName": "value"
                  },
                  "name": "value"
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc The identity combinator is a function that returns the\n * same value it was provided as an argument.\n * I - combinator implementation.\n * @example\n * identity(2); // 2\n *\n * @param {T} value Argument that should returned back.\n * @return {T} Returns same value which was passed.\n ",
              "start": 39,
              "end": 334,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 0
                },
                "end": {
                  "line": 12,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc The identity combinator is a function that returns the\n * same value it was provided as an argument.\n * I - combinator implementation.\n * @example\n * identity(2); // 2\n *\n * @param {T} value Argument that should returned back.\n * @return {T} Returns same value which was passed.\n ",
            "start": 39,
            "end": 334,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 12,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "EmptyStatement",
        "start": 386,
        "end": 387,
        "loc": {
          "start": {
            "line": 15,
            "column": 1
          },
          "end": {
            "line": 15,
            "column": 2
          }
        },
        "leadingComments": null,
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc Creates function which will always return passed argument.\n * K - combinator implementation.\n * @example\n * always(2)(); // 2\n *\n * @param {T} value Argument that should returned back from function which was returned.\n * @return {Function} Returns function which will always return first passed argument.\n ",
            "start": 389,
            "end": 710,
            "loc": {
              "start": {
                "line": 17,
                "column": 0
              },
              "end": {
                "line": 25,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 711,
        "end": 766,
        "loc": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 718,
          "end": 766,
          "loc": {
            "start": {
              "line": 26,
              "column": 7
            },
            "end": {
              "line": 28,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 727,
            "end": 733,
            "loc": {
              "start": {
                "line": 26,
                "column": 16
              },
              "end": {
                "line": 26,
                "column": 22
              },
              "identifierName": "always"
            },
            "name": "always",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 734,
              "end": 739,
              "loc": {
                "start": {
                  "line": 26,
                  "column": 23
                },
                "end": {
                  "line": 26,
                  "column": 28
                },
                "identifierName": "value"
              },
              "name": "value"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 741,
            "end": 766,
            "loc": {
              "start": {
                "line": 26,
                "column": 30
              },
              "end": {
                "line": 28,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 745,
                "end": 764,
                "loc": {
                  "start": {
                    "line": 27,
                    "column": 2
                  },
                  "end": {
                    "line": 27,
                    "column": 21
                  }
                },
                "argument": {
                  "type": "ArrowFunctionExpression",
                  "start": 752,
                  "end": 763,
                  "loc": {
                    "start": {
                      "line": 27,
                      "column": 9
                    },
                    "end": {
                      "line": 27,
                      "column": 20
                    }
                  },
                  "id": null,
                  "generator": false,
                  "expression": true,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "Identifier",
                    "start": 758,
                    "end": 763,
                    "loc": {
                      "start": {
                        "line": 27,
                        "column": 15
                      },
                      "end": {
                        "line": 27,
                        "column": 20
                      },
                      "identifierName": "value"
                    },
                    "name": "value"
                  }
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc Creates function which will always return passed argument.\n * K - combinator implementation.\n * @example\n * always(2)(); // 2\n *\n * @param {T} value Argument that should returned back from function which was returned.\n * @return {Function} Returns function which will always return first passed argument.\n ",
              "start": 389,
              "end": 710,
              "loc": {
                "start": {
                  "line": 17,
                  "column": 0
                },
                "end": {
                  "line": 25,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc Creates function which will always return passed argument.\n * K - combinator implementation.\n * @example\n * always(2)(); // 2\n *\n * @param {T} value Argument that should returned back from function which was returned.\n * @return {Function} Returns function which will always return first passed argument.\n ",
            "start": 389,
            "end": 710,
            "loc": {
              "start": {
                "line": 17,
                "column": 0
              },
              "end": {
                "line": 25,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "EmptyStatement",
        "start": 766,
        "end": 767,
        "loc": {
          "start": {
            "line": 28,
            "column": 1
          },
          "end": {
            "line": 28,
            "column": 2
          }
        },
        "leadingComments": null,
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc Takes function and changes argument order.\n * C - combinator implementation.\n * @example\n * const concat2Words = w1 => w2 => `${w1} ${w2}`;\n *\n * flip(concat2Words)('world')('hello'); // 'hello world'\n *\n * @param {Function} fn Function which will be invoked with fliped arguments.\n * @returns {Function} Function which expects to get first argument,\n * which will be used as a second argument.\n ",
            "start": 769,
            "end": 1180,
            "loc": {
              "start": {
                "line": 30,
                "column": 0
              },
              "end": {
                "line": 41,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1181,
        "end": 1238,
        "loc": {
          "start": {
            "line": 42,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 1188,
          "end": 1238,
          "loc": {
            "start": {
              "line": 42,
              "column": 7
            },
            "end": {
              "line": 44,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 1197,
            "end": 1201,
            "loc": {
              "start": {
                "line": 42,
                "column": 16
              },
              "end": {
                "line": 42,
                "column": 20
              },
              "identifierName": "flip"
            },
            "name": "flip",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 1202,
              "end": 1204,
              "loc": {
                "start": {
                  "line": 42,
                  "column": 21
                },
                "end": {
                  "line": 42,
                  "column": 23
                },
                "identifierName": "fn"
              },
              "name": "fn"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 1206,
            "end": 1238,
            "loc": {
              "start": {
                "line": 42,
                "column": 25
              },
              "end": {
                "line": 44,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 1210,
                "end": 1236,
                "loc": {
                  "start": {
                    "line": 43,
                    "column": 2
                  },
                  "end": {
                    "line": 43,
                    "column": 28
                  }
                },
                "argument": {
                  "type": "ArrowFunctionExpression",
                  "start": 1217,
                  "end": 1235,
                  "loc": {
                    "start": {
                      "line": 43,
                      "column": 9
                    },
                    "end": {
                      "line": 43,
                      "column": 27
                    }
                  },
                  "id": null,
                  "generator": false,
                  "expression": true,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "start": 1217,
                      "end": 1218,
                      "loc": {
                        "start": {
                          "line": 43,
                          "column": 9
                        },
                        "end": {
                          "line": 43,
                          "column": 10
                        },
                        "identifierName": "a"
                      },
                      "name": "a"
                    }
                  ],
                  "body": {
                    "type": "ArrowFunctionExpression",
                    "start": 1222,
                    "end": 1235,
                    "loc": {
                      "start": {
                        "line": 43,
                        "column": 14
                      },
                      "end": {
                        "line": 43,
                        "column": 27
                      }
                    },
                    "id": null,
                    "generator": false,
                    "expression": true,
                    "async": false,
                    "params": [
                      {
                        "type": "Identifier",
                        "start": 1222,
                        "end": 1223,
                        "loc": {
                          "start": {
                            "line": 43,
                            "column": 14
                          },
                          "end": {
                            "line": 43,
                            "column": 15
                          },
                          "identifierName": "b"
                        },
                        "name": "b"
                      }
                    ],
                    "body": {
                      "type": "CallExpression",
                      "start": 1227,
                      "end": 1235,
                      "loc": {
                        "start": {
                          "line": 43,
                          "column": 19
                        },
                        "end": {
                          "line": 43,
                          "column": 27
                        }
                      },
                      "callee": {
                        "type": "CallExpression",
                        "start": 1227,
                        "end": 1232,
                        "loc": {
                          "start": {
                            "line": 43,
                            "column": 19
                          },
                          "end": {
                            "line": 43,
                            "column": 24
                          }
                        },
                        "callee": {
                          "type": "Identifier",
                          "start": 1227,
                          "end": 1229,
                          "loc": {
                            "start": {
                              "line": 43,
                              "column": 19
                            },
                            "end": {
                              "line": 43,
                              "column": 21
                            },
                            "identifierName": "fn"
                          },
                          "name": "fn"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1230,
                            "end": 1231,
                            "loc": {
                              "start": {
                                "line": 43,
                                "column": 22
                              },
                              "end": {
                                "line": 43,
                                "column": 23
                              },
                              "identifierName": "b"
                            },
                            "name": "b"
                          }
                        ]
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1233,
                          "end": 1234,
                          "loc": {
                            "start": {
                              "line": 43,
                              "column": 25
                            },
                            "end": {
                              "line": 43,
                              "column": 26
                            },
                            "identifierName": "a"
                          },
                          "name": "a"
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "directives": [],
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc Takes function and changes argument order.\n * C - combinator implementation.\n * @example\n * const concat2Words = w1 => w2 => `${w1} ${w2}`;\n *\n * flip(concat2Words)('world')('hello'); // 'hello world'\n *\n * @param {Function} fn Function which will be invoked with fliped arguments.\n * @returns {Function} Function which expects to get first argument,\n * which will be used as a second argument.\n ",
              "start": 769,
              "end": 1180,
              "loc": {
                "start": {
                  "line": 30,
                  "column": 0
                },
                "end": {
                  "line": 41,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc Takes argument and returns function which expects to get\n * function which will be invoked with first argument.\n * T - combinator implementation.\n * @example\n * const addWorld = w => `${w} world`;\n *\n * thrush('hello')(addWorld); // 'hello world'\n *\n * @param {any} x Argument which will be passed into a function\n * which is expected as a second argument.\n * @returns {Function} Function which expects to get function\n * where will be passed first argument.\n ",
              "start": 1240,
              "end": 1715,
              "loc": {
                "start": {
                  "line": 46,
                  "column": 0
                },
                "end": {
                  "line": 59,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc Takes function and changes argument order.\n * C - combinator implementation.\n * @example\n * const concat2Words = w1 => w2 => `${w1} ${w2}`;\n *\n * flip(concat2Words)('world')('hello'); // 'hello world'\n *\n * @param {Function} fn Function which will be invoked with fliped arguments.\n * @returns {Function} Function which expects to get first argument,\n * which will be used as a second argument.\n ",
            "start": 769,
            "end": 1180,
            "loc": {
              "start": {
                "line": 30,
                "column": 0
              },
              "end": {
                "line": 41,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc Takes argument and returns function which expects to get\n * function which will be invoked with first argument.\n * T - combinator implementation.\n * @example\n * const addWorld = w => `${w} world`;\n *\n * thrush('hello')(addWorld); // 'hello world'\n *\n * @param {any} x Argument which will be passed into a function\n * which is expected as a second argument.\n * @returns {Function} Function which expects to get function\n * where will be passed first argument.\n ",
            "start": 1240,
            "end": 1715,
            "loc": {
              "start": {
                "line": 46,
                "column": 0
              },
              "end": {
                "line": 59,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1716,
        "end": 1765,
        "loc": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 1723,
          "end": 1765,
          "loc": {
            "start": {
              "line": 60,
              "column": 7
            },
            "end": {
              "line": 62,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 1732,
            "end": 1738,
            "loc": {
              "start": {
                "line": 60,
                "column": 16
              },
              "end": {
                "line": 60,
                "column": 22
              },
              "identifierName": "thrush"
            },
            "name": "thrush",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 1739,
              "end": 1740,
              "loc": {
                "start": {
                  "line": 60,
                  "column": 23
                },
                "end": {
                  "line": 60,
                  "column": 24
                },
                "identifierName": "x"
              },
              "name": "x"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 1742,
            "end": 1765,
            "loc": {
              "start": {
                "line": 60,
                "column": 26
              },
              "end": {
                "line": 62,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 1746,
                "end": 1763,
                "loc": {
                  "start": {
                    "line": 61,
                    "column": 2
                  },
                  "end": {
                    "line": 61,
                    "column": 19
                  }
                },
                "argument": {
                  "type": "ArrowFunctionExpression",
                  "start": 1753,
                  "end": 1762,
                  "loc": {
                    "start": {
                      "line": 61,
                      "column": 9
                    },
                    "end": {
                      "line": 61,
                      "column": 18
                    }
                  },
                  "id": null,
                  "generator": false,
                  "expression": true,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "start": 1753,
                      "end": 1754,
                      "loc": {
                        "start": {
                          "line": 61,
                          "column": 9
                        },
                        "end": {
                          "line": 61,
                          "column": 10
                        },
                        "identifierName": "f"
                      },
                      "name": "f"
                    }
                  ],
                  "body": {
                    "type": "CallExpression",
                    "start": 1758,
                    "end": 1762,
                    "loc": {
                      "start": {
                        "line": 61,
                        "column": 14
                      },
                      "end": {
                        "line": 61,
                        "column": 18
                      }
                    },
                    "callee": {
                      "type": "Identifier",
                      "start": 1758,
                      "end": 1759,
                      "loc": {
                        "start": {
                          "line": 61,
                          "column": 14
                        },
                        "end": {
                          "line": 61,
                          "column": 15
                        },
                        "identifierName": "f"
                      },
                      "name": "f"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1760,
                        "end": 1761,
                        "loc": {
                          "start": {
                            "line": 61,
                            "column": 16
                          },
                          "end": {
                            "line": 61,
                            "column": 17
                          },
                          "identifierName": "x"
                        },
                        "name": "x"
                      }
                    ]
                  }
                }
              }
            ],
            "directives": [],
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc Takes argument and returns function which expects to get\n * function which will be invoked with first argument.\n * T - combinator implementation.\n * @example\n * const addWorld = w => `${w} world`;\n *\n * thrush('hello')(addWorld); // 'hello world'\n *\n * @param {any} x Argument which will be passed into a function\n * which is expected as a second argument.\n * @returns {Function} Function which expects to get function\n * where will be passed first argument.\n ",
              "start": 1240,
              "end": 1715,
              "loc": {
                "start": {
                  "line": 46,
                  "column": 0
                },
                "end": {
                  "line": 59,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc Takes function and invokes it with passed argument two times.\n * @example\n * const add = x => y => x + y;\n *\n * duplication(add)(7); // 14\n *\n * @param {Function} fn Function which will be invoked two times\n * with the same argument.\n * @returns {Function} Function which expects for argument.\n ",
              "start": 1767,
              "end": 2077,
              "loc": {
                "start": {
                  "line": 64,
                  "column": 0
                },
                "end": {
                  "line": 74,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc Takes argument and returns function which expects to get\n * function which will be invoked with first argument.\n * T - combinator implementation.\n * @example\n * const addWorld = w => `${w} world`;\n *\n * thrush('hello')(addWorld); // 'hello world'\n *\n * @param {any} x Argument which will be passed into a function\n * which is expected as a second argument.\n * @returns {Function} Function which expects to get function\n * where will be passed first argument.\n ",
            "start": 1240,
            "end": 1715,
            "loc": {
              "start": {
                "line": 46,
                "column": 0
              },
              "end": {
                "line": 59,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc Takes function and invokes it with passed argument two times.\n * @example\n * const add = x => y => x + y;\n *\n * duplication(add)(7); // 14\n *\n * @param {Function} fn Function which will be invoked two times\n * with the same argument.\n * @returns {Function} Function which expects for argument.\n ",
            "start": 1767,
            "end": 2077,
            "loc": {
              "start": {
                "line": 64,
                "column": 0
              },
              "end": {
                "line": 74,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 2078,
        "end": 2137,
        "loc": {
          "start": {
            "line": 75,
            "column": 0
          },
          "end": {
            "line": 77,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 2085,
          "end": 2137,
          "loc": {
            "start": {
              "line": 75,
              "column": 7
            },
            "end": {
              "line": 77,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 2094,
            "end": 2105,
            "loc": {
              "start": {
                "line": 75,
                "column": 16
              },
              "end": {
                "line": 75,
                "column": 27
              },
              "identifierName": "duplication"
            },
            "name": "duplication",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 2106,
              "end": 2108,
              "loc": {
                "start": {
                  "line": 75,
                  "column": 28
                },
                "end": {
                  "line": 75,
                  "column": 30
                },
                "identifierName": "fn"
              },
              "name": "fn"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 2110,
            "end": 2137,
            "loc": {
              "start": {
                "line": 75,
                "column": 32
              },
              "end": {
                "line": 77,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 2114,
                "end": 2135,
                "loc": {
                  "start": {
                    "line": 76,
                    "column": 2
                  },
                  "end": {
                    "line": 76,
                    "column": 23
                  }
                },
                "argument": {
                  "type": "ArrowFunctionExpression",
                  "start": 2121,
                  "end": 2134,
                  "loc": {
                    "start": {
                      "line": 76,
                      "column": 9
                    },
                    "end": {
                      "line": 76,
                      "column": 22
                    }
                  },
                  "id": null,
                  "generator": false,
                  "expression": true,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "start": 2121,
                      "end": 2122,
                      "loc": {
                        "start": {
                          "line": 76,
                          "column": 9
                        },
                        "end": {
                          "line": 76,
                          "column": 10
                        },
                        "identifierName": "x"
                      },
                      "name": "x"
                    }
                  ],
                  "body": {
                    "type": "CallExpression",
                    "start": 2126,
                    "end": 2134,
                    "loc": {
                      "start": {
                        "line": 76,
                        "column": 14
                      },
                      "end": {
                        "line": 76,
                        "column": 22
                      }
                    },
                    "callee": {
                      "type": "CallExpression",
                      "start": 2126,
                      "end": 2131,
                      "loc": {
                        "start": {
                          "line": 76,
                          "column": 14
                        },
                        "end": {
                          "line": 76,
                          "column": 19
                        }
                      },
                      "callee": {
                        "type": "Identifier",
                        "start": 2126,
                        "end": 2128,
                        "loc": {
                          "start": {
                            "line": 76,
                            "column": 14
                          },
                          "end": {
                            "line": 76,
                            "column": 16
                          },
                          "identifierName": "fn"
                        },
                        "name": "fn"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 2129,
                          "end": 2130,
                          "loc": {
                            "start": {
                              "line": 76,
                              "column": 17
                            },
                            "end": {
                              "line": 76,
                              "column": 18
                            },
                            "identifierName": "x"
                          },
                          "name": "x"
                        }
                      ]
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 2132,
                        "end": 2133,
                        "loc": {
                          "start": {
                            "line": 76,
                            "column": 20
                          },
                          "end": {
                            "line": 76,
                            "column": 21
                          },
                          "identifierName": "x"
                        },
                        "name": "x"
                      }
                    ]
                  }
                }
              }
            ],
            "directives": [],
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc Takes function and invokes it with passed argument two times.\n * @example\n * const add = x => y => x + y;\n *\n * duplication(add)(7); // 14\n *\n * @param {Function} fn Function which will be invoked two times\n * with the same argument.\n * @returns {Function} Function which expects for argument.\n ",
              "start": 1767,
              "end": 2077,
              "loc": {
                "start": {
                  "line": 64,
                  "column": 0
                },
                "end": {
                  "line": 74,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc The fork combinator is useful in cases where you need to process a single resource\n * in two different ways and then combine the results. This combinator takes three functions:\n * a join function and two terminal functions that process the provided input. The result of\n * each forked function is ultimately passed in to a join function of two arguments.\n * @example\n * const calc = fork(multiply, x => x + x, identity);\n * calc(2); // 8\n *\n * @param {Function} join Argument that should returned back from function which was returned.\n * @param {Function} fn1 First terminal function.\n * @param {Function} fn2 Second terminal function.\n * @return {Function} Returns function which expects to get argument that should be passed into terminal\n *  functions.\n ",
              "start": 2139,
              "end": 2912,
              "loc": {
                "start": {
                  "line": 79,
                  "column": 0
                },
                "end": {
                  "line": 93,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc Takes function and invokes it with passed argument two times.\n * @example\n * const add = x => y => x + y;\n *\n * duplication(add)(7); // 14\n *\n * @param {Function} fn Function which will be invoked two times\n * with the same argument.\n * @returns {Function} Function which expects for argument.\n ",
            "start": 1767,
            "end": 2077,
            "loc": {
              "start": {
                "line": 64,
                "column": 0
              },
              "end": {
                "line": 74,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc The fork combinator is useful in cases where you need to process a single resource\n * in two different ways and then combine the results. This combinator takes three functions:\n * a join function and two terminal functions that process the provided input. The result of\n * each forked function is ultimately passed in to a join function of two arguments.\n * @example\n * const calc = fork(multiply, x => x + x, identity);\n * calc(2); // 8\n *\n * @param {Function} join Argument that should returned back from function which was returned.\n * @param {Function} fn1 First terminal function.\n * @param {Function} fn2 Second terminal function.\n * @return {Function} Returns function which expects to get argument that should be passed into terminal\n *  functions.\n ",
            "start": 2139,
            "end": 2912,
            "loc": {
              "start": {
                "line": 79,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 2913,
        "end": 2995,
        "loc": {
          "start": {
            "line": 94,
            "column": 0
          },
          "end": {
            "line": 96,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 2920,
          "end": 2995,
          "loc": {
            "start": {
              "line": 94,
              "column": 7
            },
            "end": {
              "line": 96,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 2929,
            "end": 2933,
            "loc": {
              "start": {
                "line": 94,
                "column": 16
              },
              "end": {
                "line": 94,
                "column": 20
              },
              "identifierName": "fork"
            },
            "name": "fork",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 2934,
              "end": 2938,
              "loc": {
                "start": {
                  "line": 94,
                  "column": 21
                },
                "end": {
                  "line": 94,
                  "column": 25
                },
                "identifierName": "join"
              },
              "name": "join"
            },
            {
              "type": "Identifier",
              "start": 2940,
              "end": 2943,
              "loc": {
                "start": {
                  "line": 94,
                  "column": 27
                },
                "end": {
                  "line": 94,
                  "column": 30
                },
                "identifierName": "fn1"
              },
              "name": "fn1"
            },
            {
              "type": "Identifier",
              "start": 2945,
              "end": 2948,
              "loc": {
                "start": {
                  "line": 94,
                  "column": 32
                },
                "end": {
                  "line": 94,
                  "column": 35
                },
                "identifierName": "fn2"
              },
              "name": "fn2"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 2950,
            "end": 2995,
            "loc": {
              "start": {
                "line": 94,
                "column": 37
              },
              "end": {
                "line": 96,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 2954,
                "end": 2993,
                "loc": {
                  "start": {
                    "line": 95,
                    "column": 2
                  },
                  "end": {
                    "line": 95,
                    "column": 41
                  }
                },
                "argument": {
                  "type": "ArrowFunctionExpression",
                  "start": 2961,
                  "end": 2992,
                  "loc": {
                    "start": {
                      "line": 95,
                      "column": 9
                    },
                    "end": {
                      "line": 95,
                      "column": 40
                    }
                  },
                  "id": null,
                  "generator": false,
                  "expression": true,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "start": 2961,
                      "end": 2964,
                      "loc": {
                        "start": {
                          "line": 95,
                          "column": 9
                        },
                        "end": {
                          "line": 95,
                          "column": 12
                        },
                        "identifierName": "val"
                      },
                      "name": "val"
                    }
                  ],
                  "body": {
                    "type": "CallExpression",
                    "start": 2968,
                    "end": 2992,
                    "loc": {
                      "start": {
                        "line": 95,
                        "column": 16
                      },
                      "end": {
                        "line": 95,
                        "column": 40
                      }
                    },
                    "callee": {
                      "type": "Identifier",
                      "start": 2968,
                      "end": 2972,
                      "loc": {
                        "start": {
                          "line": 95,
                          "column": 16
                        },
                        "end": {
                          "line": 95,
                          "column": 20
                        },
                        "identifierName": "join"
                      },
                      "name": "join"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "start": 2973,
                        "end": 2981,
                        "loc": {
                          "start": {
                            "line": 95,
                            "column": 21
                          },
                          "end": {
                            "line": 95,
                            "column": 29
                          }
                        },
                        "callee": {
                          "type": "Identifier",
                          "start": 2973,
                          "end": 2976,
                          "loc": {
                            "start": {
                              "line": 95,
                              "column": 21
                            },
                            "end": {
                              "line": 95,
                              "column": 24
                            },
                            "identifierName": "fn1"
                          },
                          "name": "fn1"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 2977,
                            "end": 2980,
                            "loc": {
                              "start": {
                                "line": 95,
                                "column": 25
                              },
                              "end": {
                                "line": 95,
                                "column": 28
                              },
                              "identifierName": "val"
                            },
                            "name": "val"
                          }
                        ]
                      },
                      {
                        "type": "CallExpression",
                        "start": 2983,
                        "end": 2991,
                        "loc": {
                          "start": {
                            "line": 95,
                            "column": 31
                          },
                          "end": {
                            "line": 95,
                            "column": 39
                          }
                        },
                        "callee": {
                          "type": "Identifier",
                          "start": 2983,
                          "end": 2986,
                          "loc": {
                            "start": {
                              "line": 95,
                              "column": 31
                            },
                            "end": {
                              "line": 95,
                              "column": 34
                            },
                            "identifierName": "fn2"
                          },
                          "name": "fn2"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 2987,
                            "end": 2990,
                            "loc": {
                              "start": {
                                "line": 95,
                                "column": 35
                              },
                              "end": {
                                "line": 95,
                                "column": 38
                              },
                              "identifierName": "val"
                            },
                            "name": "val"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ],
            "directives": [],
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc The fork combinator is useful in cases where you need to process a single resource\n * in two different ways and then combine the results. This combinator takes three functions:\n * a join function and two terminal functions that process the provided input. The result of\n * each forked function is ultimately passed in to a join function of two arguments.\n * @example\n * const calc = fork(multiply, x => x + x, identity);\n * calc(2); // 8\n *\n * @param {Function} join Argument that should returned back from function which was returned.\n * @param {Function} fn1 First terminal function.\n * @param {Function} fn2 Second terminal function.\n * @return {Function} Returns function which expects to get argument that should be passed into terminal\n *  functions.\n ",
              "start": 2139,
              "end": 2912,
              "loc": {
                "start": {
                  "line": 79,
                  "column": 0
                },
                "end": {
                  "line": 93,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc The seq combinator is used to loop over a sequence of functions.\n * @example\n * let result = 0\n *   , addToResult = x => result += x;\n *\n * result; // 0\n *\n * seq(addToResult, addToResult)(4);\n *\n * result; // 8\n *\n * @param {...Function} fns List of functions which will be invoked sequently.\n * @return {Function} Returns a new function, which runs all of them in sequence against the same value.\n ",
              "start": 2997,
              "end": 3412,
              "loc": {
                "start": {
                  "line": 98,
                  "column": 0
                },
                "end": {
                  "line": 112,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc The fork combinator is useful in cases where you need to process a single resource\n * in two different ways and then combine the results. This combinator takes three functions:\n * a join function and two terminal functions that process the provided input. The result of\n * each forked function is ultimately passed in to a join function of two arguments.\n * @example\n * const calc = fork(multiply, x => x + x, identity);\n * calc(2); // 8\n *\n * @param {Function} join Argument that should returned back from function which was returned.\n * @param {Function} fn1 First terminal function.\n * @param {Function} fn2 Second terminal function.\n * @return {Function} Returns function which expects to get argument that should be passed into terminal\n *  functions.\n ",
            "start": 2139,
            "end": 2912,
            "loc": {
              "start": {
                "line": 79,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc The seq combinator is used to loop over a sequence of functions.\n * @example\n * let result = 0\n *   , addToResult = x => result += x;\n *\n * result; // 0\n *\n * seq(addToResult, addToResult)(4);\n *\n * result; // 8\n *\n * @param {...Function} fns List of functions which will be invoked sequently.\n * @return {Function} Returns a new function, which runs all of them in sequence against the same value.\n ",
            "start": 2997,
            "end": 3412,
            "loc": {
              "start": {
                "line": 98,
                "column": 0
              },
              "end": {
                "line": 112,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 3413,
        "end": 3526,
        "loc": {
          "start": {
            "line": 113,
            "column": 0
          },
          "end": {
            "line": 119,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 3420,
          "end": 3526,
          "loc": {
            "start": {
              "line": 113,
              "column": 7
            },
            "end": {
              "line": 119,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 3429,
            "end": 3432,
            "loc": {
              "start": {
                "line": 113,
                "column": 16
              },
              "end": {
                "line": 113,
                "column": 19
              },
              "identifierName": "seq"
            },
            "name": "seq",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "RestElement",
              "start": 3433,
              "end": 3439,
              "loc": {
                "start": {
                  "line": 113,
                  "column": 20
                },
                "end": {
                  "line": 113,
                  "column": 26
                }
              },
              "argument": {
                "type": "Identifier",
                "start": 3436,
                "end": 3439,
                "loc": {
                  "start": {
                    "line": 113,
                    "column": 23
                  },
                  "end": {
                    "line": 113,
                    "column": 26
                  },
                  "identifierName": "fns"
                },
                "name": "fns"
              }
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 3441,
            "end": 3526,
            "loc": {
              "start": {
                "line": 113,
                "column": 28
              },
              "end": {
                "line": 119,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 3445,
                "end": 3524,
                "loc": {
                  "start": {
                    "line": 114,
                    "column": 2
                  },
                  "end": {
                    "line": 118,
                    "column": 4
                  }
                },
                "argument": {
                  "type": "ArrowFunctionExpression",
                  "start": 3452,
                  "end": 3523,
                  "loc": {
                    "start": {
                      "line": 114,
                      "column": 9
                    },
                    "end": {
                      "line": 118,
                      "column": 3
                    }
                  },
                  "id": null,
                  "generator": false,
                  "expression": false,
                  "async": false,
                  "params": [
                    {
                      "type": "RestElement",
                      "start": 3453,
                      "end": 3460,
                      "loc": {
                        "start": {
                          "line": 114,
                          "column": 10
                        },
                        "end": {
                          "line": 114,
                          "column": 17
                        }
                      },
                      "argument": {
                        "type": "Identifier",
                        "start": 3456,
                        "end": 3460,
                        "loc": {
                          "start": {
                            "line": 114,
                            "column": 13
                          },
                          "end": {
                            "line": 114,
                            "column": 17
                          },
                          "identifierName": "vals"
                        },
                        "name": "vals"
                      }
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "start": 3465,
                    "end": 3523,
                    "loc": {
                      "start": {
                        "line": 114,
                        "column": 22
                      },
                      "end": {
                        "line": 118,
                        "column": 3
                      }
                    },
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 3471,
                        "end": 3519,
                        "loc": {
                          "start": {
                            "line": 115,
                            "column": 4
                          },
                          "end": {
                            "line": 117,
                            "column": 7
                          }
                        },
                        "expression": {
                          "type": "CallExpression",
                          "start": 3471,
                          "end": 3518,
                          "loc": {
                            "start": {
                              "line": 115,
                              "column": 4
                            },
                            "end": {
                              "line": 117,
                              "column": 6
                            }
                          },
                          "callee": {
                            "type": "MemberExpression",
                            "start": 3471,
                            "end": 3482,
                            "loc": {
                              "start": {
                                "line": 115,
                                "column": 4
                              },
                              "end": {
                                "line": 115,
                                "column": 15
                              }
                            },
                            "object": {
                              "type": "Identifier",
                              "start": 3471,
                              "end": 3474,
                              "loc": {
                                "start": {
                                  "line": 115,
                                  "column": 4
                                },
                                "end": {
                                  "line": 115,
                                  "column": 7
                                },
                                "identifierName": "fns"
                              },
                              "name": "fns"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 3475,
                              "end": 3482,
                              "loc": {
                                "start": {
                                  "line": 115,
                                  "column": 8
                                },
                                "end": {
                                  "line": 115,
                                  "column": 15
                                },
                                "identifierName": "forEach"
                              },
                              "name": "forEach"
                            },
                            "computed": false
                          },
                          "arguments": [
                            {
                              "type": "ArrowFunctionExpression",
                              "start": 3483,
                              "end": 3517,
                              "loc": {
                                "start": {
                                  "line": 115,
                                  "column": 16
                                },
                                "end": {
                                  "line": 117,
                                  "column": 5
                                }
                              },
                              "id": null,
                              "generator": false,
                              "expression": false,
                              "async": false,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "start": 3484,
                                  "end": 3486,
                                  "loc": {
                                    "start": {
                                      "line": 115,
                                      "column": 17
                                    },
                                    "end": {
                                      "line": 115,
                                      "column": 19
                                    },
                                    "identifierName": "fn"
                                  },
                                  "name": "fn"
                                }
                              ],
                              "body": {
                                "type": "BlockStatement",
                                "start": 3491,
                                "end": 3517,
                                "loc": {
                                  "start": {
                                    "line": 115,
                                    "column": 24
                                  },
                                  "end": {
                                    "line": 117,
                                    "column": 5
                                  }
                                },
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "start": 3499,
                                    "end": 3511,
                                    "loc": {
                                      "start": {
                                        "line": 116,
                                        "column": 6
                                      },
                                      "end": {
                                        "line": 116,
                                        "column": 18
                                      }
                                    },
                                    "expression": {
                                      "type": "CallExpression",
                                      "start": 3499,
                                      "end": 3510,
                                      "loc": {
                                        "start": {
                                          "line": 116,
                                          "column": 6
                                        },
                                        "end": {
                                          "line": 116,
                                          "column": 17
                                        }
                                      },
                                      "callee": {
                                        "type": "Identifier",
                                        "start": 3499,
                                        "end": 3501,
                                        "loc": {
                                          "start": {
                                            "line": 116,
                                            "column": 6
                                          },
                                          "end": {
                                            "line": 116,
                                            "column": 8
                                          },
                                          "identifierName": "fn"
                                        },
                                        "name": "fn"
                                      },
                                      "arguments": [
                                        {
                                          "type": "SpreadElement",
                                          "start": 3502,
                                          "end": 3509,
                                          "loc": {
                                            "start": {
                                              "line": 116,
                                              "column": 9
                                            },
                                            "end": {
                                              "line": 116,
                                              "column": 16
                                            }
                                          },
                                          "argument": {
                                            "type": "Identifier",
                                            "start": 3505,
                                            "end": 3509,
                                            "loc": {
                                              "start": {
                                                "line": 116,
                                                "column": 12
                                              },
                                              "end": {
                                                "line": 116,
                                                "column": 16
                                              },
                                              "identifierName": "vals"
                                            },
                                            "name": "vals"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "directives": []
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "directives": []
                  }
                }
              }
            ],
            "directives": [],
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc The seq combinator is used to loop over a sequence of functions.\n * @example\n * let result = 0\n *   , addToResult = x => result += x;\n *\n * result; // 0\n *\n * seq(addToResult, addToResult)(4);\n *\n * result; // 8\n *\n * @param {...Function} fns List of functions which will be invoked sequently.\n * @return {Function} Returns a new function, which runs all of them in sequence against the same value.\n ",
              "start": 2997,
              "end": 3412,
              "loc": {
                "start": {
                  "line": 98,
                  "column": 0
                },
                "end": {
                  "line": 112,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc This combinator takes two functions and returns the result of the first one if the value\n * is defined (not false, null, or undefined); otherwise, it returns the result of the second function.\n * @example\n * const calc = alt(identity, x => x + 1);\n * calc(0); // 1\n * calc(2); // 2\n * @param {Function} fn1 First result function.\n * @param {Function} fn2 Second result function.\n * @return {Function} Returns the result of the first one if the value\n * is defined (not false, null, or undefined); otherwise, it returns the result of the second function\n ",
              "start": 3528,
              "end": 4097,
              "loc": {
                "start": {
                  "line": 121,
                  "column": 0
                },
                "end": {
                  "line": 132,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc The seq combinator is used to loop over a sequence of functions.\n * @example\n * let result = 0\n *   , addToResult = x => result += x;\n *\n * result; // 0\n *\n * seq(addToResult, addToResult)(4);\n *\n * result; // 8\n *\n * @param {...Function} fns List of functions which will be invoked sequently.\n * @return {Function} Returns a new function, which runs all of them in sequence against the same value.\n ",
            "start": 2997,
            "end": 3412,
            "loc": {
              "start": {
                "line": 98,
                "column": 0
              },
              "end": {
                "line": 112,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc This combinator takes two functions and returns the result of the first one if the value\n * is defined (not false, null, or undefined); otherwise, it returns the result of the second function.\n * @example\n * const calc = alt(identity, x => x + 1);\n * calc(0); // 1\n * calc(2); // 2\n * @param {Function} fn1 First result function.\n * @param {Function} fn2 Second result function.\n * @return {Function} Returns the result of the first one if the value\n * is defined (not false, null, or undefined); otherwise, it returns the result of the second function\n ",
            "start": 3528,
            "end": 4097,
            "loc": {
              "start": {
                "line": 121,
                "column": 0
              },
              "end": {
                "line": 132,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 4098,
        "end": 4169,
        "loc": {
          "start": {
            "line": 133,
            "column": 0
          },
          "end": {
            "line": 135,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 4105,
          "end": 4169,
          "loc": {
            "start": {
              "line": 133,
              "column": 7
            },
            "end": {
              "line": 135,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 4114,
            "end": 4117,
            "loc": {
              "start": {
                "line": 133,
                "column": 16
              },
              "end": {
                "line": 133,
                "column": 19
              },
              "identifierName": "alt"
            },
            "name": "alt",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 4118,
              "end": 4121,
              "loc": {
                "start": {
                  "line": 133,
                  "column": 20
                },
                "end": {
                  "line": 133,
                  "column": 23
                },
                "identifierName": "fn1"
              },
              "name": "fn1"
            },
            {
              "type": "Identifier",
              "start": 4123,
              "end": 4126,
              "loc": {
                "start": {
                  "line": 133,
                  "column": 25
                },
                "end": {
                  "line": 133,
                  "column": 28
                },
                "identifierName": "fn2"
              },
              "name": "fn2"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 4128,
            "end": 4169,
            "loc": {
              "start": {
                "line": 133,
                "column": 30
              },
              "end": {
                "line": 135,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 4132,
                "end": 4167,
                "loc": {
                  "start": {
                    "line": 134,
                    "column": 2
                  },
                  "end": {
                    "line": 134,
                    "column": 37
                  }
                },
                "argument": {
                  "type": "ArrowFunctionExpression",
                  "start": 4139,
                  "end": 4166,
                  "loc": {
                    "start": {
                      "line": 134,
                      "column": 9
                    },
                    "end": {
                      "line": 134,
                      "column": 36
                    }
                  },
                  "id": null,
                  "generator": false,
                  "expression": true,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "start": 4139,
                      "end": 4142,
                      "loc": {
                        "start": {
                          "line": 134,
                          "column": 9
                        },
                        "end": {
                          "line": 134,
                          "column": 12
                        },
                        "identifierName": "val"
                      },
                      "name": "val"
                    }
                  ],
                  "body": {
                    "type": "LogicalExpression",
                    "start": 4146,
                    "end": 4166,
                    "loc": {
                      "start": {
                        "line": 134,
                        "column": 16
                      },
                      "end": {
                        "line": 134,
                        "column": 36
                      }
                    },
                    "left": {
                      "type": "CallExpression",
                      "start": 4146,
                      "end": 4154,
                      "loc": {
                        "start": {
                          "line": 134,
                          "column": 16
                        },
                        "end": {
                          "line": 134,
                          "column": 24
                        }
                      },
                      "callee": {
                        "type": "Identifier",
                        "start": 4146,
                        "end": 4149,
                        "loc": {
                          "start": {
                            "line": 134,
                            "column": 16
                          },
                          "end": {
                            "line": 134,
                            "column": 19
                          },
                          "identifierName": "fn1"
                        },
                        "name": "fn1"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 4150,
                          "end": 4153,
                          "loc": {
                            "start": {
                              "line": 134,
                              "column": 20
                            },
                            "end": {
                              "line": 134,
                              "column": 23
                            },
                            "identifierName": "val"
                          },
                          "name": "val"
                        }
                      ]
                    },
                    "operator": "||",
                    "right": {
                      "type": "CallExpression",
                      "start": 4158,
                      "end": 4166,
                      "loc": {
                        "start": {
                          "line": 134,
                          "column": 28
                        },
                        "end": {
                          "line": 134,
                          "column": 36
                        }
                      },
                      "callee": {
                        "type": "Identifier",
                        "start": 4158,
                        "end": 4161,
                        "loc": {
                          "start": {
                            "line": 134,
                            "column": 28
                          },
                          "end": {
                            "line": 134,
                            "column": 31
                          },
                          "identifierName": "fn2"
                        },
                        "name": "fn2"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 4162,
                          "end": 4165,
                          "loc": {
                            "start": {
                              "line": 134,
                              "column": 32
                            },
                            "end": {
                              "line": 134,
                              "column": 35
                            },
                            "identifierName": "val"
                          },
                          "name": "val"
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "directives": [],
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc This combinator takes two functions and returns the result of the first one if the value\n * is defined (not false, null, or undefined); otherwise, it returns the result of the second function.\n * @example\n * const calc = alt(identity, x => x + 1);\n * calc(0); // 1\n * calc(2); // 2\n * @param {Function} fn1 First result function.\n * @param {Function} fn2 Second result function.\n * @return {Function} Returns the result of the first one if the value\n * is defined (not false, null, or undefined); otherwise, it returns the result of the second function\n ",
              "start": 3528,
              "end": 4097,
              "loc": {
                "start": {
                  "line": 121,
                  "column": 0
                },
                "end": {
                  "line": 132,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc Helps to check data in chain. Useful for debugging.\n * @example\n * let sayHelloTo = name => `Hello ${name}`\n *   , toUpperCase = str => str.toUpperCase()\n *   , addDollarSign  = str => `$${str}$`\n *   , chainMiddleResult = ''\n *   , tapHandler = data => chainMiddleResult = data\n *   , sayHelloInUpperCase = compose(addDollarSign, sayHelloTo, tap(tapHandler), toUpperCase);\n *\n *  sayHelloInUpperCase('oleh'); // '$Hello OLEH$'\n *  chainMiddleResult; // 'OLEH'\n *\n * @param {Function} fn Middleware function.\n * @return {Function} Returns data that was used for tap functio\n ",
              "start": 4171,
              "end": 4761,
              "loc": {
                "start": {
                  "line": 137,
                  "column": 0
                },
                "end": {
                  "line": 152,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc This combinator takes two functions and returns the result of the first one if the value\n * is defined (not false, null, or undefined); otherwise, it returns the result of the second function.\n * @example\n * const calc = alt(identity, x => x + 1);\n * calc(0); // 1\n * calc(2); // 2\n * @param {Function} fn1 First result function.\n * @param {Function} fn2 Second result function.\n * @return {Function} Returns the result of the first one if the value\n * is defined (not false, null, or undefined); otherwise, it returns the result of the second function\n ",
            "start": 3528,
            "end": 4097,
            "loc": {
              "start": {
                "line": 121,
                "column": 0
              },
              "end": {
                "line": 132,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc Helps to check data in chain. Useful for debugging.\n * @example\n * let sayHelloTo = name => `Hello ${name}`\n *   , toUpperCase = str => str.toUpperCase()\n *   , addDollarSign  = str => `$${str}$`\n *   , chainMiddleResult = ''\n *   , tapHandler = data => chainMiddleResult = data\n *   , sayHelloInUpperCase = compose(addDollarSign, sayHelloTo, tap(tapHandler), toUpperCase);\n *\n *  sayHelloInUpperCase('oleh'); // '$Hello OLEH$'\n *  chainMiddleResult; // 'OLEH'\n *\n * @param {Function} fn Middleware function.\n * @return {Function} Returns data that was used for tap functio\n ",
            "start": 4171,
            "end": 4761,
            "loc": {
              "start": {
                "line": 137,
                "column": 0
              },
              "end": {
                "line": 152,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 4762,
        "end": 4862,
        "loc": {
          "start": {
            "line": 153,
            "column": 0
          },
          "end": {
            "line": 158,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 4769,
          "end": 4862,
          "loc": {
            "start": {
              "line": 153,
              "column": 7
            },
            "end": {
              "line": 158,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 4778,
            "end": 4781,
            "loc": {
              "start": {
                "line": 153,
                "column": 16
              },
              "end": {
                "line": 153,
                "column": 19
              },
              "identifierName": "tap"
            },
            "name": "tap",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 4782,
              "end": 4784,
              "loc": {
                "start": {
                  "line": 153,
                  "column": 20
                },
                "end": {
                  "line": 153,
                  "column": 22
                },
                "identifierName": "fn"
              },
              "name": "fn"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 4786,
            "end": 4862,
            "loc": {
              "start": {
                "line": 153,
                "column": 24
              },
              "end": {
                "line": 158,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 4790,
                "end": 4860,
                "loc": {
                  "start": {
                    "line": 154,
                    "column": 2
                  },
                  "end": {
                    "line": 157,
                    "column": 3
                  }
                },
                "argument": {
                  "type": "ArrowFunctionExpression",
                  "start": 4797,
                  "end": 4860,
                  "loc": {
                    "start": {
                      "line": 154,
                      "column": 9
                    },
                    "end": {
                      "line": 157,
                      "column": 3
                    }
                  },
                  "id": null,
                  "generator": false,
                  "expression": false,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "start": 4797,
                      "end": 4801,
                      "loc": {
                        "start": {
                          "line": 154,
                          "column": 9
                        },
                        "end": {
                          "line": 154,
                          "column": 13
                        },
                        "identifierName": "data"
                      },
                      "name": "data"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "start": 4805,
                    "end": 4860,
                    "loc": {
                      "start": {
                        "line": 154,
                        "column": 17
                      },
                      "end": {
                        "line": 157,
                        "column": 3
                      }
                    },
                    "body": [
                      {
                        "type": "IfStatement",
                        "start": 4811,
                        "end": 4839,
                        "loc": {
                          "start": {
                            "line": 155,
                            "column": 4
                          },
                          "end": {
                            "line": 155,
                            "column": 32
                          }
                        },
                        "test": {
                          "type": "CallExpression",
                          "start": 4814,
                          "end": 4828,
                          "loc": {
                            "start": {
                              "line": 155,
                              "column": 7
                            },
                            "end": {
                              "line": 155,
                              "column": 21
                            }
                          },
                          "callee": {
                            "type": "Identifier",
                            "start": 4814,
                            "end": 4824,
                            "loc": {
                              "start": {
                                "line": 155,
                                "column": 7
                              },
                              "end": {
                                "line": 155,
                                "column": 17
                              },
                              "identifierName": "isFunction"
                            },
                            "name": "isFunction"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "start": 4825,
                              "end": 4827,
                              "loc": {
                                "start": {
                                  "line": 155,
                                  "column": 18
                                },
                                "end": {
                                  "line": 155,
                                  "column": 20
                                },
                                "identifierName": "fn"
                              },
                              "name": "fn"
                            }
                          ]
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "start": 4830,
                          "end": 4839,
                          "loc": {
                            "start": {
                              "line": 155,
                              "column": 23
                            },
                            "end": {
                              "line": 155,
                              "column": 32
                            }
                          },
                          "expression": {
                            "type": "CallExpression",
                            "start": 4830,
                            "end": 4838,
                            "loc": {
                              "start": {
                                "line": 155,
                                "column": 23
                              },
                              "end": {
                                "line": 155,
                                "column": 31
                              }
                            },
                            "callee": {
                              "type": "Identifier",
                              "start": 4830,
                              "end": 4832,
                              "loc": {
                                "start": {
                                  "line": 155,
                                  "column": 23
                                },
                                "end": {
                                  "line": 155,
                                  "column": 25
                                },
                                "identifierName": "fn"
                              },
                              "name": "fn"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "start": 4833,
                                "end": 4837,
                                "loc": {
                                  "start": {
                                    "line": 155,
                                    "column": 26
                                  },
                                  "end": {
                                    "line": 155,
                                    "column": 30
                                  },
                                  "identifierName": "data"
                                },
                                "name": "data"
                              }
                            ]
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 4844,
                        "end": 4856,
                        "loc": {
                          "start": {
                            "line": 156,
                            "column": 4
                          },
                          "end": {
                            "line": 156,
                            "column": 16
                          }
                        },
                        "argument": {
                          "type": "Identifier",
                          "start": 4851,
                          "end": 4855,
                          "loc": {
                            "start": {
                              "line": 156,
                              "column": 11
                            },
                            "end": {
                              "line": 156,
                              "column": 15
                            },
                            "identifierName": "data"
                          },
                          "name": "data"
                        }
                      }
                    ],
                    "directives": []
                  }
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc Helps to check data in chain. Useful for debugging.\n * @example\n * let sayHelloTo = name => `Hello ${name}`\n *   , toUpperCase = str => str.toUpperCase()\n *   , addDollarSign  = str => `$${str}$`\n *   , chainMiddleResult = ''\n *   , tapHandler = data => chainMiddleResult = data\n *   , sayHelloInUpperCase = compose(addDollarSign, sayHelloTo, tap(tapHandler), toUpperCase);\n *\n *  sayHelloInUpperCase('oleh'); // '$Hello OLEH$'\n *  chainMiddleResult; // 'OLEH'\n *\n * @param {Function} fn Middleware function.\n * @return {Function} Returns data that was used for tap functio\n ",
              "start": 4171,
              "end": 4761,
              "loc": {
                "start": {
                  "line": 137,
                  "column": 0
                },
                "end": {
                  "line": 152,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc Helps to check data in chain. Useful for debugging.\n * @example\n * let sayHelloTo = name => `Hello ${name}`\n *   , toUpperCase = str => str.toUpperCase()\n *   , addDollarSign  = str => `$${str}$`\n *   , chainMiddleResult = ''\n *   , tapHandler = data => chainMiddleResult = data\n *   , sayHelloInUpperCase = compose(addDollarSign, sayHelloTo, tap(tapHandler), toUpperCase);\n *\n *  sayHelloInUpperCase('oleh'); // '$Hello OLEH$'\n *  chainMiddleResult; // 'OLEH'\n *\n * @param {Function} fn Middleware function.\n * @return {Function} Returns data that was used for tap functio\n ",
            "start": 4171,
            "end": 4761,
            "loc": {
              "start": {
                "line": 137,
                "column": 0
              },
              "end": {
                "line": 152,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "EmptyStatement",
        "start": 4862,
        "end": 4863,
        "loc": {
          "start": {
            "line": 158,
            "column": 1
          },
          "end": {
            "line": 158,
            "column": 2
          }
        }
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @desc The identity combinator is a function that returns the\n * same value it was provided as an argument.\n * I - combinator implementation.\n * @example\n * identity(2); // 2\n *\n * @param {T} value Argument that should returned back.\n * @return {T} Returns same value which was passed.\n ",
      "start": 39,
      "end": 334,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc Creates function which will always return passed argument.\n * K - combinator implementation.\n * @example\n * always(2)(); // 2\n *\n * @param {T} value Argument that should returned back from function which was returned.\n * @return {Function} Returns function which will always return first passed argument.\n ",
      "start": 389,
      "end": 710,
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc Takes function and changes argument order.\n * C - combinator implementation.\n * @example\n * const concat2Words = w1 => w2 => `${w1} ${w2}`;\n *\n * flip(concat2Words)('world')('hello'); // 'hello world'\n *\n * @param {Function} fn Function which will be invoked with fliped arguments.\n * @returns {Function} Function which expects to get first argument,\n * which will be used as a second argument.\n ",
      "start": 769,
      "end": 1180,
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 41,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc Takes argument and returns function which expects to get\n * function which will be invoked with first argument.\n * T - combinator implementation.\n * @example\n * const addWorld = w => `${w} world`;\n *\n * thrush('hello')(addWorld); // 'hello world'\n *\n * @param {any} x Argument which will be passed into a function\n * which is expected as a second argument.\n * @returns {Function} Function which expects to get function\n * where will be passed first argument.\n ",
      "start": 1240,
      "end": 1715,
      "loc": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc Takes function and invokes it with passed argument two times.\n * @example\n * const add = x => y => x + y;\n *\n * duplication(add)(7); // 14\n *\n * @param {Function} fn Function which will be invoked two times\n * with the same argument.\n * @returns {Function} Function which expects for argument.\n ",
      "start": 1767,
      "end": 2077,
      "loc": {
        "start": {
          "line": 64,
          "column": 0
        },
        "end": {
          "line": 74,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc The fork combinator is useful in cases where you need to process a single resource\n * in two different ways and then combine the results. This combinator takes three functions:\n * a join function and two terminal functions that process the provided input. The result of\n * each forked function is ultimately passed in to a join function of two arguments.\n * @example\n * const calc = fork(multiply, x => x + x, identity);\n * calc(2); // 8\n *\n * @param {Function} join Argument that should returned back from function which was returned.\n * @param {Function} fn1 First terminal function.\n * @param {Function} fn2 Second terminal function.\n * @return {Function} Returns function which expects to get argument that should be passed into terminal\n *  functions.\n ",
      "start": 2139,
      "end": 2912,
      "loc": {
        "start": {
          "line": 79,
          "column": 0
        },
        "end": {
          "line": 93,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc The seq combinator is used to loop over a sequence of functions.\n * @example\n * let result = 0\n *   , addToResult = x => result += x;\n *\n * result; // 0\n *\n * seq(addToResult, addToResult)(4);\n *\n * result; // 8\n *\n * @param {...Function} fns List of functions which will be invoked sequently.\n * @return {Function} Returns a new function, which runs all of them in sequence against the same value.\n ",
      "start": 2997,
      "end": 3412,
      "loc": {
        "start": {
          "line": 98,
          "column": 0
        },
        "end": {
          "line": 112,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc This combinator takes two functions and returns the result of the first one if the value\n * is defined (not false, null, or undefined); otherwise, it returns the result of the second function.\n * @example\n * const calc = alt(identity, x => x + 1);\n * calc(0); // 1\n * calc(2); // 2\n * @param {Function} fn1 First result function.\n * @param {Function} fn2 Second result function.\n * @return {Function} Returns the result of the first one if the value\n * is defined (not false, null, or undefined); otherwise, it returns the result of the second function\n ",
      "start": 3528,
      "end": 4097,
      "loc": {
        "start": {
          "line": 121,
          "column": 0
        },
        "end": {
          "line": 132,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc Helps to check data in chain. Useful for debugging.\n * @example\n * let sayHelloTo = name => `Hello ${name}`\n *   , toUpperCase = str => str.toUpperCase()\n *   , addDollarSign  = str => `$${str}$`\n *   , chainMiddleResult = ''\n *   , tapHandler = data => chainMiddleResult = data\n *   , sayHelloInUpperCase = compose(addDollarSign, sayHelloTo, tap(tapHandler), toUpperCase);\n *\n *  sayHelloInUpperCase('oleh'); // '$Hello OLEH$'\n *  chainMiddleResult; // 'OLEH'\n *\n * @param {Function} fn Middleware function.\n * @return {Function} Returns data that was used for tap functio\n ",
      "start": 4171,
      "end": 4761,
      "loc": {
        "start": {
          "line": 137,
          "column": 0
        },
        "end": {
          "line": 152,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7,
      "end": 8,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "isFunction",
      "start": 9,
      "end": 19,
      "loc": {
        "start": {
          "line": 1,
          "column": 9
        },
        "end": {
          "line": 1,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 20,
      "end": 21,
      "loc": {
        "start": {
          "line": 1,
          "column": 20
        },
        "end": {
          "line": 1,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 22,
      "end": 26,
      "loc": {
        "start": {
          "line": 1,
          "column": 22
        },
        "end": {
          "line": 1,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "../Type",
      "start": 27,
      "end": 36,
      "loc": {
        "start": {
          "line": 1,
          "column": 27
        },
        "end": {
          "line": 1,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 36,
      "end": 37,
      "loc": {
        "start": {
          "line": 1,
          "column": 36
        },
        "end": {
          "line": 1,
          "column": 37
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc The identity combinator is a function that returns the\n * same value it was provided as an argument.\n * I - combinator implementation.\n * @example\n * identity(2); // 2\n *\n * @param {T} value Argument that should returned back.\n * @return {T} Returns same value which was passed.\n ",
      "start": 39,
      "end": 334,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 335,
      "end": 341,
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 342,
      "end": 350,
      "loc": {
        "start": {
          "line": 13,
          "column": 7
        },
        "end": {
          "line": 13,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "identity",
      "start": 351,
      "end": 359,
      "loc": {
        "start": {
          "line": 13,
          "column": 16
        },
        "end": {
          "line": 13,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 359,
      "end": 360,
      "loc": {
        "start": {
          "line": 13,
          "column": 24
        },
        "end": {
          "line": 13,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "value",
      "start": 360,
      "end": 365,
      "loc": {
        "start": {
          "line": 13,
          "column": 25
        },
        "end": {
          "line": 13,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 365,
      "end": 366,
      "loc": {
        "start": {
          "line": 13,
          "column": 30
        },
        "end": {
          "line": 13,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 367,
      "end": 368,
      "loc": {
        "start": {
          "line": 13,
          "column": 32
        },
        "end": {
          "line": 13,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 371,
      "end": 377,
      "loc": {
        "start": {
          "line": 14,
          "column": 2
        },
        "end": {
          "line": 14,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "value",
      "start": 378,
      "end": 383,
      "loc": {
        "start": {
          "line": 14,
          "column": 9
        },
        "end": {
          "line": 14,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 383,
      "end": 384,
      "loc": {
        "start": {
          "line": 14,
          "column": 14
        },
        "end": {
          "line": 14,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 385,
      "end": 386,
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 386,
      "end": 387,
      "loc": {
        "start": {
          "line": 15,
          "column": 1
        },
        "end": {
          "line": 15,
          "column": 2
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc Creates function which will always return passed argument.\n * K - combinator implementation.\n * @example\n * always(2)(); // 2\n *\n * @param {T} value Argument that should returned back from function which was returned.\n * @return {Function} Returns function which will always return first passed argument.\n ",
      "start": 389,
      "end": 710,
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 711,
      "end": 717,
      "loc": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 26,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 718,
      "end": 726,
      "loc": {
        "start": {
          "line": 26,
          "column": 7
        },
        "end": {
          "line": 26,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "always",
      "start": 727,
      "end": 733,
      "loc": {
        "start": {
          "line": 26,
          "column": 16
        },
        "end": {
          "line": 26,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 733,
      "end": 734,
      "loc": {
        "start": {
          "line": 26,
          "column": 22
        },
        "end": {
          "line": 26,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "value",
      "start": 734,
      "end": 739,
      "loc": {
        "start": {
          "line": 26,
          "column": 23
        },
        "end": {
          "line": 26,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 739,
      "end": 740,
      "loc": {
        "start": {
          "line": 26,
          "column": 28
        },
        "end": {
          "line": 26,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 741,
      "end": 742,
      "loc": {
        "start": {
          "line": 26,
          "column": 30
        },
        "end": {
          "line": 26,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 745,
      "end": 751,
      "loc": {
        "start": {
          "line": 27,
          "column": 2
        },
        "end": {
          "line": 27,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 752,
      "end": 753,
      "loc": {
        "start": {
          "line": 27,
          "column": 9
        },
        "end": {
          "line": 27,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 753,
      "end": 754,
      "loc": {
        "start": {
          "line": 27,
          "column": 10
        },
        "end": {
          "line": 27,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 755,
      "end": 757,
      "loc": {
        "start": {
          "line": 27,
          "column": 12
        },
        "end": {
          "line": 27,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "value",
      "start": 758,
      "end": 763,
      "loc": {
        "start": {
          "line": 27,
          "column": 15
        },
        "end": {
          "line": 27,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 763,
      "end": 764,
      "loc": {
        "start": {
          "line": 27,
          "column": 20
        },
        "end": {
          "line": 27,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 765,
      "end": 766,
      "loc": {
        "start": {
          "line": 28,
          "column": 0
        },
        "end": {
          "line": 28,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 766,
      "end": 767,
      "loc": {
        "start": {
          "line": 28,
          "column": 1
        },
        "end": {
          "line": 28,
          "column": 2
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc Takes function and changes argument order.\n * C - combinator implementation.\n * @example\n * const concat2Words = w1 => w2 => `${w1} ${w2}`;\n *\n * flip(concat2Words)('world')('hello'); // 'hello world'\n *\n * @param {Function} fn Function which will be invoked with fliped arguments.\n * @returns {Function} Function which expects to get first argument,\n * which will be used as a second argument.\n ",
      "start": 769,
      "end": 1180,
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 41,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 1181,
      "end": 1187,
      "loc": {
        "start": {
          "line": 42,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 1188,
      "end": 1196,
      "loc": {
        "start": {
          "line": 42,
          "column": 7
        },
        "end": {
          "line": 42,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "flip",
      "start": 1197,
      "end": 1201,
      "loc": {
        "start": {
          "line": 42,
          "column": 16
        },
        "end": {
          "line": 42,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1201,
      "end": 1202,
      "loc": {
        "start": {
          "line": 42,
          "column": 20
        },
        "end": {
          "line": 42,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 1202,
      "end": 1204,
      "loc": {
        "start": {
          "line": 42,
          "column": 21
        },
        "end": {
          "line": 42,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1204,
      "end": 1205,
      "loc": {
        "start": {
          "line": 42,
          "column": 23
        },
        "end": {
          "line": 42,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1206,
      "end": 1207,
      "loc": {
        "start": {
          "line": 42,
          "column": 25
        },
        "end": {
          "line": 42,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1210,
      "end": 1216,
      "loc": {
        "start": {
          "line": 43,
          "column": 2
        },
        "end": {
          "line": 43,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "a",
      "start": 1217,
      "end": 1218,
      "loc": {
        "start": {
          "line": 43,
          "column": 9
        },
        "end": {
          "line": 43,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1219,
      "end": 1221,
      "loc": {
        "start": {
          "line": 43,
          "column": 11
        },
        "end": {
          "line": 43,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "b",
      "start": 1222,
      "end": 1223,
      "loc": {
        "start": {
          "line": 43,
          "column": 14
        },
        "end": {
          "line": 43,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1224,
      "end": 1226,
      "loc": {
        "start": {
          "line": 43,
          "column": 16
        },
        "end": {
          "line": 43,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 1227,
      "end": 1229,
      "loc": {
        "start": {
          "line": 43,
          "column": 19
        },
        "end": {
          "line": 43,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1229,
      "end": 1230,
      "loc": {
        "start": {
          "line": 43,
          "column": 21
        },
        "end": {
          "line": 43,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "b",
      "start": 1230,
      "end": 1231,
      "loc": {
        "start": {
          "line": 43,
          "column": 22
        },
        "end": {
          "line": 43,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1231,
      "end": 1232,
      "loc": {
        "start": {
          "line": 43,
          "column": 23
        },
        "end": {
          "line": 43,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1232,
      "end": 1233,
      "loc": {
        "start": {
          "line": 43,
          "column": 24
        },
        "end": {
          "line": 43,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "a",
      "start": 1233,
      "end": 1234,
      "loc": {
        "start": {
          "line": 43,
          "column": 25
        },
        "end": {
          "line": 43,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1234,
      "end": 1235,
      "loc": {
        "start": {
          "line": 43,
          "column": 26
        },
        "end": {
          "line": 43,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1235,
      "end": 1236,
      "loc": {
        "start": {
          "line": 43,
          "column": 27
        },
        "end": {
          "line": 43,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1237,
      "end": 1238,
      "loc": {
        "start": {
          "line": 44,
          "column": 0
        },
        "end": {
          "line": 44,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc Takes argument and returns function which expects to get\n * function which will be invoked with first argument.\n * T - combinator implementation.\n * @example\n * const addWorld = w => `${w} world`;\n *\n * thrush('hello')(addWorld); // 'hello world'\n *\n * @param {any} x Argument which will be passed into a function\n * which is expected as a second argument.\n * @returns {Function} Function which expects to get function\n * where will be passed first argument.\n ",
      "start": 1240,
      "end": 1715,
      "loc": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 1716,
      "end": 1722,
      "loc": {
        "start": {
          "line": 60,
          "column": 0
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 1723,
      "end": 1731,
      "loc": {
        "start": {
          "line": 60,
          "column": 7
        },
        "end": {
          "line": 60,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "thrush",
      "start": 1732,
      "end": 1738,
      "loc": {
        "start": {
          "line": 60,
          "column": 16
        },
        "end": {
          "line": 60,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1738,
      "end": 1739,
      "loc": {
        "start": {
          "line": 60,
          "column": 22
        },
        "end": {
          "line": 60,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "x",
      "start": 1739,
      "end": 1740,
      "loc": {
        "start": {
          "line": 60,
          "column": 23
        },
        "end": {
          "line": 60,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1740,
      "end": 1741,
      "loc": {
        "start": {
          "line": 60,
          "column": 24
        },
        "end": {
          "line": 60,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1742,
      "end": 1743,
      "loc": {
        "start": {
          "line": 60,
          "column": 26
        },
        "end": {
          "line": 60,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1746,
      "end": 1752,
      "loc": {
        "start": {
          "line": 61,
          "column": 2
        },
        "end": {
          "line": 61,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "f",
      "start": 1753,
      "end": 1754,
      "loc": {
        "start": {
          "line": 61,
          "column": 9
        },
        "end": {
          "line": 61,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1755,
      "end": 1757,
      "loc": {
        "start": {
          "line": 61,
          "column": 11
        },
        "end": {
          "line": 61,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "f",
      "start": 1758,
      "end": 1759,
      "loc": {
        "start": {
          "line": 61,
          "column": 14
        },
        "end": {
          "line": 61,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1759,
      "end": 1760,
      "loc": {
        "start": {
          "line": 61,
          "column": 15
        },
        "end": {
          "line": 61,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "x",
      "start": 1760,
      "end": 1761,
      "loc": {
        "start": {
          "line": 61,
          "column": 16
        },
        "end": {
          "line": 61,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1761,
      "end": 1762,
      "loc": {
        "start": {
          "line": 61,
          "column": 17
        },
        "end": {
          "line": 61,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1762,
      "end": 1763,
      "loc": {
        "start": {
          "line": 61,
          "column": 18
        },
        "end": {
          "line": 61,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1764,
      "end": 1765,
      "loc": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 62,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc Takes function and invokes it with passed argument two times.\n * @example\n * const add = x => y => x + y;\n *\n * duplication(add)(7); // 14\n *\n * @param {Function} fn Function which will be invoked two times\n * with the same argument.\n * @returns {Function} Function which expects for argument.\n ",
      "start": 1767,
      "end": 2077,
      "loc": {
        "start": {
          "line": 64,
          "column": 0
        },
        "end": {
          "line": 74,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 2078,
      "end": 2084,
      "loc": {
        "start": {
          "line": 75,
          "column": 0
        },
        "end": {
          "line": 75,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 2085,
      "end": 2093,
      "loc": {
        "start": {
          "line": 75,
          "column": 7
        },
        "end": {
          "line": 75,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "duplication",
      "start": 2094,
      "end": 2105,
      "loc": {
        "start": {
          "line": 75,
          "column": 16
        },
        "end": {
          "line": 75,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2105,
      "end": 2106,
      "loc": {
        "start": {
          "line": 75,
          "column": 27
        },
        "end": {
          "line": 75,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 2106,
      "end": 2108,
      "loc": {
        "start": {
          "line": 75,
          "column": 28
        },
        "end": {
          "line": 75,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2108,
      "end": 2109,
      "loc": {
        "start": {
          "line": 75,
          "column": 30
        },
        "end": {
          "line": 75,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2110,
      "end": 2111,
      "loc": {
        "start": {
          "line": 75,
          "column": 32
        },
        "end": {
          "line": 75,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 2114,
      "end": 2120,
      "loc": {
        "start": {
          "line": 76,
          "column": 2
        },
        "end": {
          "line": 76,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "x",
      "start": 2121,
      "end": 2122,
      "loc": {
        "start": {
          "line": 76,
          "column": 9
        },
        "end": {
          "line": 76,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2123,
      "end": 2125,
      "loc": {
        "start": {
          "line": 76,
          "column": 11
        },
        "end": {
          "line": 76,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 2126,
      "end": 2128,
      "loc": {
        "start": {
          "line": 76,
          "column": 14
        },
        "end": {
          "line": 76,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2128,
      "end": 2129,
      "loc": {
        "start": {
          "line": 76,
          "column": 16
        },
        "end": {
          "line": 76,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "x",
      "start": 2129,
      "end": 2130,
      "loc": {
        "start": {
          "line": 76,
          "column": 17
        },
        "end": {
          "line": 76,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2130,
      "end": 2131,
      "loc": {
        "start": {
          "line": 76,
          "column": 18
        },
        "end": {
          "line": 76,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2131,
      "end": 2132,
      "loc": {
        "start": {
          "line": 76,
          "column": 19
        },
        "end": {
          "line": 76,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "x",
      "start": 2132,
      "end": 2133,
      "loc": {
        "start": {
          "line": 76,
          "column": 20
        },
        "end": {
          "line": 76,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2133,
      "end": 2134,
      "loc": {
        "start": {
          "line": 76,
          "column": 21
        },
        "end": {
          "line": 76,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2134,
      "end": 2135,
      "loc": {
        "start": {
          "line": 76,
          "column": 22
        },
        "end": {
          "line": 76,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2136,
      "end": 2137,
      "loc": {
        "start": {
          "line": 77,
          "column": 0
        },
        "end": {
          "line": 77,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc The fork combinator is useful in cases where you need to process a single resource\n * in two different ways and then combine the results. This combinator takes three functions:\n * a join function and two terminal functions that process the provided input. The result of\n * each forked function is ultimately passed in to a join function of two arguments.\n * @example\n * const calc = fork(multiply, x => x + x, identity);\n * calc(2); // 8\n *\n * @param {Function} join Argument that should returned back from function which was returned.\n * @param {Function} fn1 First terminal function.\n * @param {Function} fn2 Second terminal function.\n * @return {Function} Returns function which expects to get argument that should be passed into terminal\n *  functions.\n ",
      "start": 2139,
      "end": 2912,
      "loc": {
        "start": {
          "line": 79,
          "column": 0
        },
        "end": {
          "line": 93,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 2913,
      "end": 2919,
      "loc": {
        "start": {
          "line": 94,
          "column": 0
        },
        "end": {
          "line": 94,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 2920,
      "end": 2928,
      "loc": {
        "start": {
          "line": 94,
          "column": 7
        },
        "end": {
          "line": 94,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fork",
      "start": 2929,
      "end": 2933,
      "loc": {
        "start": {
          "line": 94,
          "column": 16
        },
        "end": {
          "line": 94,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2933,
      "end": 2934,
      "loc": {
        "start": {
          "line": 94,
          "column": 20
        },
        "end": {
          "line": 94,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "join",
      "start": 2934,
      "end": 2938,
      "loc": {
        "start": {
          "line": 94,
          "column": 21
        },
        "end": {
          "line": 94,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2938,
      "end": 2939,
      "loc": {
        "start": {
          "line": 94,
          "column": 25
        },
        "end": {
          "line": 94,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn1",
      "start": 2940,
      "end": 2943,
      "loc": {
        "start": {
          "line": 94,
          "column": 27
        },
        "end": {
          "line": 94,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2943,
      "end": 2944,
      "loc": {
        "start": {
          "line": 94,
          "column": 30
        },
        "end": {
          "line": 94,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn2",
      "start": 2945,
      "end": 2948,
      "loc": {
        "start": {
          "line": 94,
          "column": 32
        },
        "end": {
          "line": 94,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2948,
      "end": 2949,
      "loc": {
        "start": {
          "line": 94,
          "column": 35
        },
        "end": {
          "line": 94,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2950,
      "end": 2951,
      "loc": {
        "start": {
          "line": 94,
          "column": 37
        },
        "end": {
          "line": 94,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 2954,
      "end": 2960,
      "loc": {
        "start": {
          "line": 95,
          "column": 2
        },
        "end": {
          "line": 95,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "val",
      "start": 2961,
      "end": 2964,
      "loc": {
        "start": {
          "line": 95,
          "column": 9
        },
        "end": {
          "line": 95,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2965,
      "end": 2967,
      "loc": {
        "start": {
          "line": 95,
          "column": 13
        },
        "end": {
          "line": 95,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "join",
      "start": 2968,
      "end": 2972,
      "loc": {
        "start": {
          "line": 95,
          "column": 16
        },
        "end": {
          "line": 95,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2972,
      "end": 2973,
      "loc": {
        "start": {
          "line": 95,
          "column": 20
        },
        "end": {
          "line": 95,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn1",
      "start": 2973,
      "end": 2976,
      "loc": {
        "start": {
          "line": 95,
          "column": 21
        },
        "end": {
          "line": 95,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2976,
      "end": 2977,
      "loc": {
        "start": {
          "line": 95,
          "column": 24
        },
        "end": {
          "line": 95,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "val",
      "start": 2977,
      "end": 2980,
      "loc": {
        "start": {
          "line": 95,
          "column": 25
        },
        "end": {
          "line": 95,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2980,
      "end": 2981,
      "loc": {
        "start": {
          "line": 95,
          "column": 28
        },
        "end": {
          "line": 95,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2981,
      "end": 2982,
      "loc": {
        "start": {
          "line": 95,
          "column": 29
        },
        "end": {
          "line": 95,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn2",
      "start": 2983,
      "end": 2986,
      "loc": {
        "start": {
          "line": 95,
          "column": 31
        },
        "end": {
          "line": 95,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2986,
      "end": 2987,
      "loc": {
        "start": {
          "line": 95,
          "column": 34
        },
        "end": {
          "line": 95,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "val",
      "start": 2987,
      "end": 2990,
      "loc": {
        "start": {
          "line": 95,
          "column": 35
        },
        "end": {
          "line": 95,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2990,
      "end": 2991,
      "loc": {
        "start": {
          "line": 95,
          "column": 38
        },
        "end": {
          "line": 95,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2991,
      "end": 2992,
      "loc": {
        "start": {
          "line": 95,
          "column": 39
        },
        "end": {
          "line": 95,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2992,
      "end": 2993,
      "loc": {
        "start": {
          "line": 95,
          "column": 40
        },
        "end": {
          "line": 95,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2994,
      "end": 2995,
      "loc": {
        "start": {
          "line": 96,
          "column": 0
        },
        "end": {
          "line": 96,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc The seq combinator is used to loop over a sequence of functions.\n * @example\n * let result = 0\n *   , addToResult = x => result += x;\n *\n * result; // 0\n *\n * seq(addToResult, addToResult)(4);\n *\n * result; // 8\n *\n * @param {...Function} fns List of functions which will be invoked sequently.\n * @return {Function} Returns a new function, which runs all of them in sequence against the same value.\n ",
      "start": 2997,
      "end": 3412,
      "loc": {
        "start": {
          "line": 98,
          "column": 0
        },
        "end": {
          "line": 112,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 3413,
      "end": 3419,
      "loc": {
        "start": {
          "line": 113,
          "column": 0
        },
        "end": {
          "line": 113,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 3420,
      "end": 3428,
      "loc": {
        "start": {
          "line": 113,
          "column": 7
        },
        "end": {
          "line": 113,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "seq",
      "start": 3429,
      "end": 3432,
      "loc": {
        "start": {
          "line": 113,
          "column": 16
        },
        "end": {
          "line": 113,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3432,
      "end": 3433,
      "loc": {
        "start": {
          "line": 113,
          "column": 19
        },
        "end": {
          "line": 113,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "...",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3433,
      "end": 3436,
      "loc": {
        "start": {
          "line": 113,
          "column": 20
        },
        "end": {
          "line": 113,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fns",
      "start": 3436,
      "end": 3439,
      "loc": {
        "start": {
          "line": 113,
          "column": 23
        },
        "end": {
          "line": 113,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3439,
      "end": 3440,
      "loc": {
        "start": {
          "line": 113,
          "column": 26
        },
        "end": {
          "line": 113,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3441,
      "end": 3442,
      "loc": {
        "start": {
          "line": 113,
          "column": 28
        },
        "end": {
          "line": 113,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 3445,
      "end": 3451,
      "loc": {
        "start": {
          "line": 114,
          "column": 2
        },
        "end": {
          "line": 114,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3452,
      "end": 3453,
      "loc": {
        "start": {
          "line": 114,
          "column": 9
        },
        "end": {
          "line": 114,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "...",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3453,
      "end": 3456,
      "loc": {
        "start": {
          "line": 114,
          "column": 10
        },
        "end": {
          "line": 114,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "vals",
      "start": 3456,
      "end": 3460,
      "loc": {
        "start": {
          "line": 114,
          "column": 13
        },
        "end": {
          "line": 114,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3460,
      "end": 3461,
      "loc": {
        "start": {
          "line": 114,
          "column": 17
        },
        "end": {
          "line": 114,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3462,
      "end": 3464,
      "loc": {
        "start": {
          "line": 114,
          "column": 19
        },
        "end": {
          "line": 114,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3465,
      "end": 3466,
      "loc": {
        "start": {
          "line": 114,
          "column": 22
        },
        "end": {
          "line": 114,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fns",
      "start": 3471,
      "end": 3474,
      "loc": {
        "start": {
          "line": 115,
          "column": 4
        },
        "end": {
          "line": 115,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3474,
      "end": 3475,
      "loc": {
        "start": {
          "line": 115,
          "column": 7
        },
        "end": {
          "line": 115,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "forEach",
      "start": 3475,
      "end": 3482,
      "loc": {
        "start": {
          "line": 115,
          "column": 8
        },
        "end": {
          "line": 115,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3482,
      "end": 3483,
      "loc": {
        "start": {
          "line": 115,
          "column": 15
        },
        "end": {
          "line": 115,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3483,
      "end": 3484,
      "loc": {
        "start": {
          "line": 115,
          "column": 16
        },
        "end": {
          "line": 115,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 3484,
      "end": 3486,
      "loc": {
        "start": {
          "line": 115,
          "column": 17
        },
        "end": {
          "line": 115,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3486,
      "end": 3487,
      "loc": {
        "start": {
          "line": 115,
          "column": 19
        },
        "end": {
          "line": 115,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3488,
      "end": 3490,
      "loc": {
        "start": {
          "line": 115,
          "column": 21
        },
        "end": {
          "line": 115,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3491,
      "end": 3492,
      "loc": {
        "start": {
          "line": 115,
          "column": 24
        },
        "end": {
          "line": 115,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 3499,
      "end": 3501,
      "loc": {
        "start": {
          "line": 116,
          "column": 6
        },
        "end": {
          "line": 116,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3501,
      "end": 3502,
      "loc": {
        "start": {
          "line": 116,
          "column": 8
        },
        "end": {
          "line": 116,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "...",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3502,
      "end": 3505,
      "loc": {
        "start": {
          "line": 116,
          "column": 9
        },
        "end": {
          "line": 116,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "vals",
      "start": 3505,
      "end": 3509,
      "loc": {
        "start": {
          "line": 116,
          "column": 12
        },
        "end": {
          "line": 116,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3509,
      "end": 3510,
      "loc": {
        "start": {
          "line": 116,
          "column": 16
        },
        "end": {
          "line": 116,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3510,
      "end": 3511,
      "loc": {
        "start": {
          "line": 116,
          "column": 17
        },
        "end": {
          "line": 116,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3516,
      "end": 3517,
      "loc": {
        "start": {
          "line": 117,
          "column": 4
        },
        "end": {
          "line": 117,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3517,
      "end": 3518,
      "loc": {
        "start": {
          "line": 117,
          "column": 5
        },
        "end": {
          "line": 117,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3518,
      "end": 3519,
      "loc": {
        "start": {
          "line": 117,
          "column": 6
        },
        "end": {
          "line": 117,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3522,
      "end": 3523,
      "loc": {
        "start": {
          "line": 118,
          "column": 2
        },
        "end": {
          "line": 118,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3523,
      "end": 3524,
      "loc": {
        "start": {
          "line": 118,
          "column": 3
        },
        "end": {
          "line": 118,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3525,
      "end": 3526,
      "loc": {
        "start": {
          "line": 119,
          "column": 0
        },
        "end": {
          "line": 119,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc This combinator takes two functions and returns the result of the first one if the value\n * is defined (not false, null, or undefined); otherwise, it returns the result of the second function.\n * @example\n * const calc = alt(identity, x => x + 1);\n * calc(0); // 1\n * calc(2); // 2\n * @param {Function} fn1 First result function.\n * @param {Function} fn2 Second result function.\n * @return {Function} Returns the result of the first one if the value\n * is defined (not false, null, or undefined); otherwise, it returns the result of the second function\n ",
      "start": 3528,
      "end": 4097,
      "loc": {
        "start": {
          "line": 121,
          "column": 0
        },
        "end": {
          "line": 132,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 4098,
      "end": 4104,
      "loc": {
        "start": {
          "line": 133,
          "column": 0
        },
        "end": {
          "line": 133,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 4105,
      "end": 4113,
      "loc": {
        "start": {
          "line": 133,
          "column": 7
        },
        "end": {
          "line": 133,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "alt",
      "start": 4114,
      "end": 4117,
      "loc": {
        "start": {
          "line": 133,
          "column": 16
        },
        "end": {
          "line": 133,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4117,
      "end": 4118,
      "loc": {
        "start": {
          "line": 133,
          "column": 19
        },
        "end": {
          "line": 133,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn1",
      "start": 4118,
      "end": 4121,
      "loc": {
        "start": {
          "line": 133,
          "column": 20
        },
        "end": {
          "line": 133,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4121,
      "end": 4122,
      "loc": {
        "start": {
          "line": 133,
          "column": 23
        },
        "end": {
          "line": 133,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn2",
      "start": 4123,
      "end": 4126,
      "loc": {
        "start": {
          "line": 133,
          "column": 25
        },
        "end": {
          "line": 133,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4126,
      "end": 4127,
      "loc": {
        "start": {
          "line": 133,
          "column": 28
        },
        "end": {
          "line": 133,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4128,
      "end": 4129,
      "loc": {
        "start": {
          "line": 133,
          "column": 30
        },
        "end": {
          "line": 133,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 4132,
      "end": 4138,
      "loc": {
        "start": {
          "line": 134,
          "column": 2
        },
        "end": {
          "line": 134,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "val",
      "start": 4139,
      "end": 4142,
      "loc": {
        "start": {
          "line": 134,
          "column": 9
        },
        "end": {
          "line": 134,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4143,
      "end": 4145,
      "loc": {
        "start": {
          "line": 134,
          "column": 13
        },
        "end": {
          "line": 134,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn1",
      "start": 4146,
      "end": 4149,
      "loc": {
        "start": {
          "line": 134,
          "column": 16
        },
        "end": {
          "line": 134,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4149,
      "end": 4150,
      "loc": {
        "start": {
          "line": 134,
          "column": 19
        },
        "end": {
          "line": 134,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "val",
      "start": 4150,
      "end": 4153,
      "loc": {
        "start": {
          "line": 134,
          "column": 20
        },
        "end": {
          "line": 134,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4153,
      "end": 4154,
      "loc": {
        "start": {
          "line": 134,
          "column": 23
        },
        "end": {
          "line": 134,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "||",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": 1,
        "updateContext": null
      },
      "value": "||",
      "start": 4155,
      "end": 4157,
      "loc": {
        "start": {
          "line": 134,
          "column": 25
        },
        "end": {
          "line": 134,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn2",
      "start": 4158,
      "end": 4161,
      "loc": {
        "start": {
          "line": 134,
          "column": 28
        },
        "end": {
          "line": 134,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4161,
      "end": 4162,
      "loc": {
        "start": {
          "line": 134,
          "column": 31
        },
        "end": {
          "line": 134,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "val",
      "start": 4162,
      "end": 4165,
      "loc": {
        "start": {
          "line": 134,
          "column": 32
        },
        "end": {
          "line": 134,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4165,
      "end": 4166,
      "loc": {
        "start": {
          "line": 134,
          "column": 35
        },
        "end": {
          "line": 134,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4166,
      "end": 4167,
      "loc": {
        "start": {
          "line": 134,
          "column": 36
        },
        "end": {
          "line": 134,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4168,
      "end": 4169,
      "loc": {
        "start": {
          "line": 135,
          "column": 0
        },
        "end": {
          "line": 135,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc Helps to check data in chain. Useful for debugging.\n * @example\n * let sayHelloTo = name => `Hello ${name}`\n *   , toUpperCase = str => str.toUpperCase()\n *   , addDollarSign  = str => `$${str}$`\n *   , chainMiddleResult = ''\n *   , tapHandler = data => chainMiddleResult = data\n *   , sayHelloInUpperCase = compose(addDollarSign, sayHelloTo, tap(tapHandler), toUpperCase);\n *\n *  sayHelloInUpperCase('oleh'); // '$Hello OLEH$'\n *  chainMiddleResult; // 'OLEH'\n *\n * @param {Function} fn Middleware function.\n * @return {Function} Returns data that was used for tap functio\n ",
      "start": 4171,
      "end": 4761,
      "loc": {
        "start": {
          "line": 137,
          "column": 0
        },
        "end": {
          "line": 152,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 4762,
      "end": 4768,
      "loc": {
        "start": {
          "line": 153,
          "column": 0
        },
        "end": {
          "line": 153,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 4769,
      "end": 4777,
      "loc": {
        "start": {
          "line": 153,
          "column": 7
        },
        "end": {
          "line": 153,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "tap",
      "start": 4778,
      "end": 4781,
      "loc": {
        "start": {
          "line": 153,
          "column": 16
        },
        "end": {
          "line": 153,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4781,
      "end": 4782,
      "loc": {
        "start": {
          "line": 153,
          "column": 19
        },
        "end": {
          "line": 153,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 4782,
      "end": 4784,
      "loc": {
        "start": {
          "line": 153,
          "column": 20
        },
        "end": {
          "line": 153,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4784,
      "end": 4785,
      "loc": {
        "start": {
          "line": 153,
          "column": 22
        },
        "end": {
          "line": 153,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4786,
      "end": 4787,
      "loc": {
        "start": {
          "line": 153,
          "column": 24
        },
        "end": {
          "line": 153,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 4790,
      "end": 4796,
      "loc": {
        "start": {
          "line": 154,
          "column": 2
        },
        "end": {
          "line": 154,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "data",
      "start": 4797,
      "end": 4801,
      "loc": {
        "start": {
          "line": 154,
          "column": 9
        },
        "end": {
          "line": 154,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4802,
      "end": 4804,
      "loc": {
        "start": {
          "line": 154,
          "column": 14
        },
        "end": {
          "line": 154,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4805,
      "end": 4806,
      "loc": {
        "start": {
          "line": 154,
          "column": 17
        },
        "end": {
          "line": 154,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "if",
        "keyword": "if",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "if",
      "start": 4811,
      "end": 4813,
      "loc": {
        "start": {
          "line": 155,
          "column": 4
        },
        "end": {
          "line": 155,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4813,
      "end": 4814,
      "loc": {
        "start": {
          "line": 155,
          "column": 6
        },
        "end": {
          "line": 155,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "isFunction",
      "start": 4814,
      "end": 4824,
      "loc": {
        "start": {
          "line": 155,
          "column": 7
        },
        "end": {
          "line": 155,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4824,
      "end": 4825,
      "loc": {
        "start": {
          "line": 155,
          "column": 17
        },
        "end": {
          "line": 155,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 4825,
      "end": 4827,
      "loc": {
        "start": {
          "line": 155,
          "column": 18
        },
        "end": {
          "line": 155,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4827,
      "end": 4828,
      "loc": {
        "start": {
          "line": 155,
          "column": 20
        },
        "end": {
          "line": 155,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4828,
      "end": 4829,
      "loc": {
        "start": {
          "line": 155,
          "column": 21
        },
        "end": {
          "line": 155,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "fn",
      "start": 4830,
      "end": 4832,
      "loc": {
        "start": {
          "line": 155,
          "column": 23
        },
        "end": {
          "line": 155,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4832,
      "end": 4833,
      "loc": {
        "start": {
          "line": 155,
          "column": 25
        },
        "end": {
          "line": 155,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "data",
      "start": 4833,
      "end": 4837,
      "loc": {
        "start": {
          "line": 155,
          "column": 26
        },
        "end": {
          "line": 155,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4837,
      "end": 4838,
      "loc": {
        "start": {
          "line": 155,
          "column": 30
        },
        "end": {
          "line": 155,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4838,
      "end": 4839,
      "loc": {
        "start": {
          "line": 155,
          "column": 31
        },
        "end": {
          "line": 155,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 4844,
      "end": 4850,
      "loc": {
        "start": {
          "line": 156,
          "column": 4
        },
        "end": {
          "line": 156,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "data",
      "start": 4851,
      "end": 4855,
      "loc": {
        "start": {
          "line": 156,
          "column": 11
        },
        "end": {
          "line": 156,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4855,
      "end": 4856,
      "loc": {
        "start": {
          "line": 156,
          "column": 15
        },
        "end": {
          "line": 156,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4859,
      "end": 4860,
      "loc": {
        "start": {
          "line": 157,
          "column": 2
        },
        "end": {
          "line": 157,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4861,
      "end": 4862,
      "loc": {
        "start": {
          "line": 158,
          "column": 0
        },
        "end": {
          "line": 158,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4862,
      "end": 4863,
      "loc": {
        "start": {
          "line": 158,
          "column": 1
        },
        "end": {
          "line": 158,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4864,
      "end": 4864,
      "loc": {
        "start": {
          "line": 159,
          "column": 0
        },
        "end": {
          "line": 159,
          "column": 0
        }
      }
    }
  ]
}